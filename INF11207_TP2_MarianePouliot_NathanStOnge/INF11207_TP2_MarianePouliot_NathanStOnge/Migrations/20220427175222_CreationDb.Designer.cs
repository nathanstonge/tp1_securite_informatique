// <auto-generated />
using INF11207_TP2_MarianePouliot_NathanStOnge.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace INF11207_TP2_MarianePouliot_NathanStOnge.Migrations
{
    [DbContext(typeof(WineQualityDbContext))]
    [Migration("20220427175222_CreationDb")]
    partial class CreationDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("INF11207_TP2_MarianePouliot_NathanStOnge.Models.Prediction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Date")
                        .HasColumnType("longtext");

                    b.Property<int>("Quality")
                        .HasColumnType("int");

                    b.Property<int>("SettingId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SettingId");

                    b.HasIndex("UserId");

                    b.ToTable("Predictions");
                });

            modelBuilder.Entity("INF11207_TP2_MarianePouliot_NathanStOnge.Models.Setting", b =>
                {
                    b.Property<int>("SettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float>("AcidCitric")
                        .HasColumnType("float");

                    b.Property<float>("AcidVolatil")
                        .HasColumnType("float");

                    b.Property<float>("Alcool")
                        .HasColumnType("float");

                    b.Property<string>("SortAlgo")
                        .HasColumnType("longtext");

                    b.Property<float>("Sulfate")
                        .HasColumnType("float");

                    b.Property<int>("ValueK")
                        .HasColumnType("int");

                    b.HasKey("SettingId");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("INF11207_TP2_MarianePouliot_NathanStOnge.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Birthday")
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("Gender")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("INF11207_TP2_MarianePouliot_NathanStOnge.Models.Prediction", b =>
                {
                    b.HasOne("INF11207_TP2_MarianePouliot_NathanStOnge.Models.Setting", "Setting")
                        .WithMany()
                        .HasForeignKey("SettingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("INF11207_TP2_MarianePouliot_NathanStOnge.Models.User", "User")
                        .WithMany("Predictions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Setting");

                    b.Navigation("User");
                });

            modelBuilder.Entity("INF11207_TP2_MarianePouliot_NathanStOnge.Models.User", b =>
                {
                    b.Navigation("Predictions");
                });
#pragma warning restore 612, 618
        }
    }
}
